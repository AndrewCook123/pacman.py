def runGame(self):
        game = self
        run = True
        while run:
            self.timer.tick(self.fps)
            if self.counter < 19:
                self.counter += 1
                if self.counter > 3:
                    self.flicker = False
            else:
                self.counter = 0
                self.flicker = True
            if self.powerup and self.power_counter < 600:
                self.power_counter += 1
            elif self.powerup and self.power_counter >= 600:
                self.power_counter = 0
                self.powerup = False
                self.eaten_ghost = [False, False, False, False]
            if self.startup_counter < 180 and not self.game_over and not self.game_won:
                self.moving = False
                self.startup_counter += 1
            else:
                self.moving = True

            self.screen.fill('black')
            self.draw_board(game)
            center_x = self.player_x + 23
            center_y = self.player_y + 24
            if self.powerup:
                self.ghost_speeds = [1, 1, 1, 1]
            else:
                self.ghost_speeds = [2, 2, 2, 2]
            if self.eaten_ghost[0]:
                self.ghost_speeds[0] = 2
            if self.eaten_ghost[1]:
                self.ghost_speeds[1] = 2
            if self.eaten_ghost[2]:
                self.ghost_speeds[2] = 2
            if self.eaten_ghost[3]:
                self.ghost_speeds[3] = 2
            if self.blinky_dead:
                self.ghost_speeds[0] = 4
            if self.inky_dead:
                self.ghost_speeds[1] = 4
            if self.pinky_dead:
                self.ghost_speeds[2] = 4
            if self.clyde_dead:
                self.ghost_speeds[3] = 4

            self.game_won = True
            for i in range(len(self.level)):
                if 1 in self.level[i] or 2 in self.level[i]:
                    self.game_won = False

            player_circle = pygame.draw.circle(self.screen, 'black', (center_x, center_y), 20, 2)
            self.draw_player(game)
            blinky = Ghost(self.blinky_x, self.blinky_y, self.targets[0], self.ghost_speeds[0], self.blinky_img, self.blinky_direction, self.blinky_dead,
                           self.blinky_box, 0)
            inky = Ghost(self.inky_x, self.inky_y, self.targets[1], self.ghost_speeds[1], self.inky_img, self.inky_direction, self.inky_dead,
                         self.inky_box, 1)
            pinky = Ghost(self.pinky_x, self.pinky_y, self.targets[2], self.ghost_speeds[2], self.pinky_img, self.pinky_direction, self.pinky_dead,
                          self.pinky_box, 2)
            clyde = Ghost(self.clyde_x, self.clyde_y, self.targets[3], self.ghost_speeds[3], self.clyde_img, self.clyde_direction, self.clyde_dead,
                          self.clyde_box, 3)
            self.draw_misc(game)
            self.targets = self.get_targets(game, self.blinky_x, self.blinky_y, self.inky_x, self.inky_y, self.pinky_x,self.pinky_y, self.clyde_x, self.clyde_y)

            self.turns_allowed = self.check_position(game, center_x, center_y)
            if self.moving:
                self.player_x, self.player_y = self.move_player(game, self.player_x, self.player_y)
                if not self.blinky_dead and not blinky.in_box:
                    self.blinky_x, self.blinky_y, self.blinky_direction = blinky.move_blinky()
                else:
                    self.blinky_x, self.blinky_y, self.blinky_direction = blinky.move_clyde()
                if not self.pinky_dead and not pinky.in_box:
                    self.pinky_x, self.pinky_y, self.pinky_direction = pinky.move_pinky()
                else:
                    self.pinky_x, self.pinky_y, self.pinky_direction = pinky.move_clyde()
                if not self.inky_dead and not inky.in_box:
                    self.inky_x, self.inky_y, self.inky_direction = inky.move_inky()
                else:
                    self.inky_x, self.inky_y, self.inky_direction = inky.move_clyde()
                self.clyde_x, self.clyde_y, self.clyde_direction = clyde.move_clyde()
            #self.score, self.powerup, self.power_counter, self.eaten_ghost = self.check_collisions(self.game, self.score, self.powerup, self.power_counter, self.eaten_ghost)
            # add to if not powerup to check if eaten ghosts
            if not self.powerup:
                if (player_circle.colliderect(blinky.rect) and not blinky.dead) or \
                        (player_circle.colliderect(inky.rect) and not inky.dead) or \
                        (player_circle.colliderect(pinky.rect) and not pinky.dead) or \
                        (player_circle.colliderect(clyde.rect) and not clyde.dead):
                    if self.lives > 0:
                        self.lives -= 1
                        self.startup_counter = 0
                        self.powerup = False
                        self.power_counter = 0
                        self.player_x = 450
                        self.player_y = 663
                        self.direction = 0
                        self.direction_command = 0
                        self.blinky_x = 56
                        self.blinky_y = 58
                        self.blinky_direction = 0
                        self.inky_x = 440
                        self.inky_y = 388
                        self.inky_direction = 2
                        self.pinky_x = 440
                        self.pinky_y = 438
                        self.pinky_direction = 2
                        self.clyde_x = 440
                        self.clyde_y = 438
                        self.clyde_direction = 2
                        self.eaten_ghost = [False, False, False, False]
                        self.blinky_dead = False
                        self.inky_dead = False
                        self.clyde_dead = False
                        self.pinky_dead = False
                    else:
                        self.game_over = True
                        self.moving = False
                        self.startup_counter = 0
            if self.powerup and player_circle.colliderect(blinky.rect) and self.eaten_ghost[0] and not blinky.dead:
                if self.lives > 0:
                    self.powerup = False
                    self.power_counter = 0
                    self.lives -= 1
                    self.startup_counter = 0
                    self.player_x = 450
                    self.player_y = 663
                    self.direction = 0
                    self.direction_command = 0
                    self.blinky_x = 56
                    self.blinky_y = 58
                    self.blinky_direction = 0
                    self.inky_x = 440
                    self.inky_y = 388
                    self.inky_direction = 2
                    self.pinky_x = 440
                    self.pinky_y = 438
                    self.pinky_direction = 2
                    self.clyde_x = 440
                    self.clyde_y = 438
                    self.clyde_direction = 2
                    self.eaten_ghost = [False, False, False, False]
                    self.blinky_dead = False
                    self.inky_dead = False
                    self.clyde_dead = False
                    self.pinky_dead = False
                else:
                    self.game_over = True
                    self.moving = False
                    self.startup_counter = 0
            if self.powerup and player_circle.colliderect(inky.rect) and self.eaten_ghost[1] and not inky.dead:
                if self.lives > 0:
                    self.powerup = False
                    self.power_counter = 0
                    self.lives -= 1
                    self.startup_counter = 0
                    self.player_x = 450
                    self.player_y = 663
                    self.direction = 0
                    self.direction_command = 0
                    self.blinky_x = 56
                    self.blinky_y = 58
                    self.blinky_direction = 0
                    self.inky_x = 440
                    self.inky_y = 388
                    self.inky_direction = 2
                    self.pinky_x = 440
                    self.pinky_y = 438
                    self.pinky_direction = 2
                    self.clyde_x = 440
                    self.clyde_y = 438
                    self.clyde_direction = 2
                    self.eaten_ghost = [False, False, False, False]
                    self.blinky_dead = False
                    self.inky_dead = False
                    self.clyde_dead = False
                    self.pinky_dead = False
                else:
                    self.game_over = True
                    self.moving = False
                    self.startup_counter = 0
            if self.powerup and player_circle.colliderect(pinky.rect) and self.eaten_ghost[2] and not pinky.dead:
                if self.lives > 0:
                    self.powerup = False
                    self.power_counter = 0
                    self.lives -= 1
                    self.startup_counter = 0
                    self.player_x = 450
                    self.player_y = 663
                    self.direction = 0
                    self.direction_command = 0
                    self.blinky_x = 56
                    self.blinky_y = 58
                    self.blinky_direction = 0
                    self.inky_x = 440
                    self.inky_y = 388
                    self.inky_direction = 2
                    self.pinky_x = 440
                    self.pinky_y = 438
                    self.pinky_direction = 2
                    self.clyde_x = 440
                    self.clyde_y = 438
                    self.clyde_direction = 2
                    self.eaten_ghost = [False, False, False, False]
                    self.blinky_dead = False
                    self.inky_dead = False
                    self.clyde_dead = False
                    self.pinky_dead = False
                else:
                    self.game_over = True
                    self.moving = False
                    self.startup_counter = 0
            if self.powerup and player_circle.colliderect(clyde.rect) and self.eaten_ghost[3] and not clyde.dead:
                if self.lives > 0:
                    self.powerup = False
                    self.power_counter = 0
                    self.lives -= 1
                    self.startup_counter = 0
                    self.player_x = 450
                    self.player_y = 663
                    self.direction = 0
                    self.direction_command = 0
                    self.blinky_x = 56
                    self.blinky_y = 58
                    self.blinky_direction = 0
                    self.inky_x = 440
                    self.inky_y = 388
                    self.inky_direction = 2
                    self.pinky_x = 440
                    self.pinky_y = 438
                    self.pinky_direction = 2
                    self.clyde_x = 440
                    self.clyde_y = 438
                    self.clyde_direction = 2
                    self.eaten_ghost = [False, False, False, False]
                    self.blinky_dead = False
                    self.inky_dead = False
                    self.clyde_dead = False
                    self.pinky_dead = False
                else:
                    self.game_over = True
                    self.moving = False
                    self.startup_counter = 0
            if self.powerup and player_circle.colliderect(blinky.rect) and not blinky.dead and not self.eaten_ghost[0]:
                self.blinky_dead = True
                self.eaten_ghost[0] = True
                self.score += (2 ** self.eaten_ghost.count(True)) * 100
            if self.powerup and player_circle.colliderect(inky.rect) and not inky.dead and not self.eaten_ghost[1]:
                self.inky_dead = True
                self.eaten_ghost[1] = True
                self.score += (2 ** self.eaten_ghost.count(True)) * 100
            if self.powerup and player_circle.colliderect(pinky.rect) and not pinky.dead and not self.eaten_ghost[2]:
                self.pinky_dead = True
                self.eaten_ghost[2] = True
                self.score += (2 ** self.eaten_ghost.count(True)) * 100
            if self.powerup and player_circle.colliderect(clyde.rect) and not clyde.dead and not self.eaten_ghost[3]:
                self.clyde_dead = True
                self.eaten_ghost[3] = True
                self.score += (2 ** self.eaten_ghost.count(True)) * 100

            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    run = False
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_RIGHT:
                        self.direction_command = 0
                    if event.key == pygame.K_LEFT:
                        self.direction_command = 1
                    if event.key == pygame.K_UP:
                        self.direction_command = 2
                    if event.key == pygame.K_DOWN:
                        self.direction_command = 3
                    if event.key == pygame.K_SPACE and (self.game_over or self.game_won):
                        self.powerup = False
                        self.power_counter = 0
                        self.lives -= 1
                        self.startup_counter = 0
                        self.player_x = 450
                        self.player_y = 663
                        self.direction = 0
                        self.direction_command = 0
                        self.blinky_x = 56
                        self.blinky_y = 58
                        self.blinky_direction = 0
                        self.inky_x = 440
                        self.inky_y = 388
                        self.inky_direction = 2
                        self.pinky_x = 440
                        self.pinky_y = 438
                        self.pinky_direction = 2
                        self.clyde_x = 440
                        self.clyde_y = 438
                        self.clyde_direction = 2
                        self.eaten_ghost = [False, False, False, False]
                        self.blinky_dead = False
                        self.inky_dead = False
                        self.clyde_dead = False
                        self.pinky_dead = False
                        self.score = 0
                        self.lives = 3
                        self.level = copy.deepcopy(boards)
                        self.game_over = False
                        self.game_won = False

                if event.type == pygame.KEYUP:
                    if event.key == pygame.K_RIGHT and self.direction_command == 0:
                        self.direction_command = self.direction
                    if event.key == pygame.K_LEFT and self.direction_command == 1:
                        self.direction_command = self.direction
                    if event.key == pygame.K_UP and self.direction_command == 2:
                        self.direction_command = self.direction
                    if event.key == pygame.K_DOWN and self.direction_command == 3:
                        self.direction_command = self.direction

            if self.direction_command == 0 and self.turns_allowed[0]:
                self.direction = 0
            if self.direction_command == 1 and self.turns_allowed[1]:
                self.direction = 1
            if self.direction_command == 2 and self.turns_allowed[2]:
                self.direction = 2
            if self.direction_command == 3 and self.turns_allowed[3]:
                self.direction = 3

            if self.player_x > 900:
                self.player_x = -47
            elif self.player_x < -50:
                self.player_x = 897

            if blinky.in_box and self.blinky_dead:
                self.blinky_dead = False
            if inky.in_box and self.inky_dead:
                self.inky_dead = False
            if pinky.in_box and self.pinky_dead:
                self.pinky_dead = False
            if clyde.in_box and self.clyde_dead:
                self.clyde_dead = False

            pygame.display.flip()
        pygame.quit()


        # sound effects, restart and winning messages

