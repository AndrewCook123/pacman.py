from board import boards
from pacman import Ghost
import pygame
import copy
import math

class Level(object):
    def __init__(self):
        self.WIDTH = 900
        self.HEIGHT = 950
        self.screen = pygame.display.set_mode([self.WIDTH, self.HEIGHT])
        self.timer = pygame.time.Clock()
        self.fps = 60
        self.font = pygame.font.Font('freesansbold.ttf', 20)
        self.level = copy.deepcopy(boards)
        self.color = 'blue'
        self.PI = math.pi
        self.player_images = []
        for i in range(1, 5):
            self.player_images.append(pygame.transform.scale(pygame.image.load(f'assets/player_images/{i}.png'), (45, 45)))
        self.blinky_img = pygame.transform.scale(pygame.image.load(f'assets/ghost_images/red.png'), (45, 45))
        self.pinky_img = pygame.transform.scale(pygame.image.load(f'assets/ghost_images/pink.png'), (45, 45))
        self.inky_img = pygame.transform.scale(pygame.image.load(f'assets/ghost_images/blue.png'), (45, 45))
        self.clyde_img = pygame.transform.scale(pygame.image.load(f'assets/ghost_images/orange.png'), (45, 45))
        self.spooked_img = pygame.transform.scale(pygame.image.load(f'assets/ghost_images/powerup.png'), (45, 45))
        self.dead_img = pygame.transform.scale(pygame.image.load(f'assets/ghost_images/dead.png'), (45, 45))
        self.player_x = 450
        self.player_y = 663
        self.direction = 0
        self.blinky_x = 56
        self.blinky_y = 58
        self.blinky_direction = 0
        self.inky_x = 440
        self.inky_y = 388
        self.inky_direction = 2
        self.pinky_x = 440
        self.pinky_y = 438
        self.pinky_direction = 2
        self.clyde_x = 440
        self.clyde_y = 438
        self.clyde_direction = 2
        self.counter = 0
        self.flicker = False
        # R, L, U, D
        self.turns_allowed = [False, False, False, False]
        self.direction_command = 0
        self.player_speed = 2
        self.score = 0
        self.powerup = False
        self.power_counter = 0
        self.eaten_ghost = [False, False, False, False]
        self.targets = [(self.player_x, self.player_y), (self.player_x, self.player_y), (self.player_x, self.player_y), (self.player_x, self.player_y)]
        self.blinky_dead = False
        self.inky_dead = False
        self.clyde_dead = False
        self.pinky_dead = False
        self.blinky_box = False
        self.inky_box = False
        self.clyde_box = False
        self.pinky_box = False
        self.moving = False
        self.ghost_speeds = [2, 2, 2, 2]
        self.startup_counter = 0
        self.lives = 3
        self.game_over = False
        self.game_won = False
        
        def draw_misc():
            score_text = self.font.render(f'Score: {self.score}', True, 'white')
            self.screen.blit(score_text, (10, 920))
            if self.powerup:
                pygame.draw.circle(self.screen, 'blue', (140, 930), 15)
            for i in range(self.lives):
                self.screen.blit(pygame.transform.scale(self.player_images[0], (30, 30)), (650 + i * 40, 915))
            if self.game_over:
                pygame.draw.rect(self.screen, 'white', [50, 200, 800, 300],0, 10)
                pygame.draw.rect(self.screen, 'dark gray', [70, 220, 760, 260], 0, 10)
                gameover_text = self.font.render('Game over! Space bar to restart!', True, 'red')
                self.screen.blit(gameover_text, (100, 300))
            if self.game_won:
                pygame.draw.rect(self.screen, 'white', [50, 200, 800, 300],0, 10)
                pygame.draw.rect(self.screen, 'dark gray', [70, 220, 760, 260], 0, 10)
                gameover_text = self.font.render('Victory! Space bar to restart!', True, 'green')
                self.screen.blit(gameover_text, (100, 300))
        
        def check_collisions(scor, power, power_count, eaten_ghosts):
            num1 = (self.HEIGHT - 50) // 32
            num2 = self.WIDTH // 30
            if 0 < self.player_x < 870:
                if self.level[Ghost.center_y // num1][Ghost.center_x // num2] == 1:
                    self.level[Ghost.center_y // num1][Ghost.center_x // num2] = 0
                    scor += 10
                if self.level[Ghost.center_y // num1][Ghost.center_x // num2] == 2:
                    self.level[Ghost.center_y // num1][Ghost.center_x // num2] = 0
                    scor += 50
                    power = True
                    power_count = 0
                    eaten_ghosts = [False, False, False, False]
            return scor, power, power_count, eaten_ghosts
